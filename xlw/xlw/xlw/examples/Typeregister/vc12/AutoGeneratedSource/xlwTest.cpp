//// 
//// Autogenerated by xlw 
//// Do not edit this file, it will be overwritten 
//// by InterfaceGenerator 
////

#include "xlw/MyContainers.h"
#include <xlw/CellMatrix.h>
#include "Test.h"
#include <xlw/xlw.h>
#include <xlw/XlFunctionRegistration.h>
#include <stdexcept>
#include <xlw/XlOpenClose.h>
#include <xlw/HiResTimer.h>
using namespace xlw;

namespace {
const char* LibraryName = "TypeRegisterDemo";
};


// registrations start here


namespace
{
XLRegistration::Arg
AccSTDVectorArgs[]=
{
{ "v"," The vector ","XLF_OPER"}
};
  XLRegistration::XLFunctionRegistrationHelper
registerAccSTDVector("xlAccSTDVector",
"AccSTDVector",
" GAdds all the elements of the vector ",
LibraryName,
AccSTDVectorArgs,
1
,false
,false
,""
,""
,false
,false
,false
);
}



extern "C"
{
LPXLFOPER EXCEL_EXPORT
xlAccSTDVector(
LPXLFOPER va)
{
EXCEL_BEGIN;

	if (XlfExcel::Instance().IsCalledByFuncWiz())
		return XlfOper(true);

XlfOper vb(
	(va));
MyArray vc(
	vb.AsArray("vc"));
vector<double> v(
	GetSTDVector(vc));

double result(
	AccSTDVector(
		v)
	);
return XlfOper(result);
EXCEL_END
}
}



//////////////////////////

namespace
{
XLRegistration::Arg
ExamResultArgs[]=
{
{ "s"," The student ","XLF_OPER"}
};
  XLRegistration::XLFunctionRegistrationHelper
registerExamResult("xlExamResult",
"ExamResult",
" Gets the students exam result ",
LibraryName,
ExamResultArgs,
1
,false
,false
,""
,""
,false
,false
,false
);
}



extern "C"
{
LPXLFOPER EXCEL_EXPORT
xlExamResult(
LPXLFOPER sa)
{
EXCEL_BEGIN;

	if (XlfExcel::Instance().IsCalledByFuncWiz())
		return XlfOper(true);

XlfOper sb(
	(sa));
CellMatrix sc(
	sb.AsCellMatrix("sc"));
student s(
	GetStudent(sc));

double result(
	ExamResult(
		s)
	);
return XlfOper(result);
EXCEL_END
}
}



//////////////////////////

//////////////////////////
// Methods that will get registered to execute in AutoOpen
//////////////////////////

//////////////////////////
// Methods that will get registered to execute in AutoClose
//////////////////////////

