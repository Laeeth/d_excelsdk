
/*
 Copyright (C) 1998, 1999, 2001, 2002, 2003, 2004 Jérôme Lecomte
 Copyright (C) 2007, 2008 Eric Ehlers

 This file is part of XLW, a free-software/open-source C++ wrapper of the
 Excel C API - http://xlw.sourceforge.net/

 XLW is free software: you can redistribute it and/or modify it under the
 terms of the XLW license.  You should have received a copy of the
 license along with this program; if not, please email xlw-users@lists.sf.net

 This program is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 FOR A PARTICULAR PURPOSE.  See the license for more details.
*/

#ifndef INC_XlfArgDescList_H
#define INC_XlfArgDescList_H

/*!
\file XlfArgDescList.h
\brief Class XlfArgDescList - Encapsulates an argument list
*/

// $Id: XlfArgDescList.h 1280 2011-08-07 11:33:52Z adcockj $

#include <xlw/XlfArgDesc.h>
#include <list>

#if defined(_MSC_VER)
#pragma once
#endif

namespace xlw {

    //! Encapsulates an argument list.
    /*!
    You can use the + operator to concatenate two XlfArgDesc objects to create an
    XlfArgDescList object to be passed as an argument to function
    XlfFuncDesc::Register.

    The assignment operator, destructor, and copy constructor are left to be
    generated by the compiler.
    */
    class EXCEL32_API XlfArgDescList
    {
    public:
        //! \name Structors
        //@{
        //! Default ctor.
        XlfArgDescList();
        //! Copy ctor.
        XlfArgDescList(const XlfArgDescList& list);
        //! List initialization ctor.
        XlfArgDescList(const XlfArgDesc& first);
        //@}

        //! \name Manage argument list
        //@{
        //! Push a new argument in the list.
        XlfArgDescList& operator+(const XlfArgDesc& newarg);
        //! Type definition of the underlying container used to stored arguments.
        typedef std::list<XlfArgDesc> container_type;
        //! Type definition for an iterator to the argument list.
        typedef container_type::iterator iterator;
        //! Type definition for a const iterator to the argument list.
        typedef container_type::const_iterator const_iterator;
        //! An iterator at the start of the list.
        iterator begin();
        //! A const iterator at the start of the list.
        const_iterator begin() const;
        //! An iterator at the end of the list.
        iterator end();
        //! A const iterator at the end of the list.
        const_iterator end() const;
        //! The size of the list.
        size_t size() const;
        //@}

        friend EXCEL32_API XlfArgDescList operator+(const XlfArgDesc&, const XlfArgDesc&);

    private:
        //! Container for the arguments in the list.
        container_type arguments_;
    };

    //! Creates a list of arguments from two XlfArgDesc objects.
    EXCEL32_API XlfArgDescList operator+(const XlfArgDesc&, const XlfArgDesc&);

}

#endif

